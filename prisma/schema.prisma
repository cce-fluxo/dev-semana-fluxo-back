// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Usuario {
  id Int @id @default(autoincrement())
  nome String
  email String @unique
  curso String
  periodo String
  cronograma Cronograma? 
  respostas_escolhidas Resposta_escolhida []
}

model Pergunta {
  id Int @id @default(autoincrement())
  pergunta String
  numero Int @unique
  respostas Resposta []
  perguntas_escolhidas Resposta_escolhida []
}

model Resposta {
  id Int @id @default(autoincrement())
  texto_resposta String
  id_pergunta Int
  pergunta Pergunta @relation(fields: [id_pergunta], references: [id], onDelete: Cascade)
  respostas_escolhidas Resposta_escolhida []
  tags Tag_resposta []
}

model Resposta_escolhida {
  id Int @id @default(autoincrement())
  id_usuario Int
  id_pergunta Int
  id_resposta Int
  usuario Usuario @relation(fields: [id_usuario], references: [id], onDelete: Cascade)
  pergunta Pergunta @relation(fields: [id_pergunta], references: [id], onDelete: Cascade)
  resposta Resposta @relation(fields: [id_resposta], references: [id], onDelete: Cascade)
}

model Tag {
  id Int @id @default(autoincrement())
  nome String
  tags_empresa Tag_empresa []
  tags_resposta Tag_resposta []
  tags_palestra Tag_palestra []
}

model Tag_empresa {
  id Int @id @default(autoincrement())
  id_empresa Int
  id_tag Int
  peso Int?
  tag Tag @relation(fields: [id_tag], references: [id], onDelete: Cascade)
  empresa Empresa @relation(fields: [id_empresa], references: [id], onDelete: Cascade)
  
}

model Tag_resposta {
  id Int @id @default(autoincrement())
  id_resposta Int
  id_tag Int
  peso Int?
  tag Tag @relation(fields: [id_tag], references: [id], onDelete: Cascade)
  resposta Resposta @relation(fields: [id_resposta], references: [id], onDelete: Cascade)
  
}

model Tag_palestra {
  id Int @id @default(autoincrement())
  id_palestra Int
  id_tag Int
  peso Int?
  tag Tag @relation(fields: [id_tag], references: [id], onDelete: Cascade)
  palestra Palestra @relation(fields: [id_palestra], references: [id], onDelete: Cascade)
  
}

model Palestra {
  id Int @id @default(autoincrement())
  nome String
  tema String
  local String
  horario DateTime
  Data DateTime
  tags Tag_palestra []
  cronogramas Cronograma [] @relation("Cronograma_palestra")
  empresas Empresa [] @relation("Palestra_empresa")
}

model Empresa{
  id Int @id @default(autoincrement())
  nome String
  tipo String
  texto_explicativo String
  tags Tag_empresa []
  palestras Palestra [] @relation("Palestra_empresa")
}

model Cronograma {
  id Int @id @default(autoincrement())
  data_envio DateTime
  metodo_envio String
  id_usuario Int @unique
  usuario Usuario @relation(fields: [id_usuario], references: [id], onDelete: Cascade)
  palestras Palestra [] @relation("Cronograma_palestra")
}



